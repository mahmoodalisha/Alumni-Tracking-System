{"ast":null,"code":"import React,{useState,useEffect}from'react';import{fetchAlumni,createAlumni,updateAlumni,deleteAlumni}from'../services/api';import AlumniForm from'../components/AlumniForm';import AlumniList from'../components/AlumniList';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=()=>{const[token]=useState(localStorage.getItem('token'));const[selectedAlumni,setSelectedAlumni]=useState(null);const[alumniList,setAlumniList]=useState([]);useEffect(()=>{const fetchData=async()=>{try{const data=await fetchAlumni(token);console.log('Fetched alumni data:',data);setAlumniList(data||[]);// Set the list directly from the response\n}catch(error){console.error('Error fetching alumni:',error);setAlumniList([]);// state is reset if an error occurs\n}};fetchData();},[token]);const handleCreateOrUpdate=async alumniData=>{try{if(selectedAlumni){await updateAlumni(token,selectedAlumni._id,alumniData);}else{await createAlumni(token,alumniData);}const response=await fetchAlumni(token);setAlumniList(response||[]);setSelectedAlumni(null);}catch(error){console.error('Error creating/updating alumni',error);}};const handleEdit=alumni=>{setSelectedAlumni(alumni);};const handleLogout=()=>{localStorage.removeItem('token');window.location.href='/admin/login';};const handleDelete=async id=>{try{await deleteAlumni(token,id);// Fetch the updated list of alumni\nconst data=await fetchAlumni(token);setAlumniList(data||[]);// Set the updated list directly from the response\n}catch(error){console.error('Error deleting alumni:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"}),/*#__PURE__*/_jsx(AlumniForm,{initialValues:selectedAlumni||{},onSubmit:handleCreateOrUpdate}),/*#__PURE__*/_jsx(\"h3\",{children:\"Alumni List\"}),/*#__PURE__*/_jsx(AlumniList,{alumniList:alumniList,onEdit:handleEdit,onDelete:handleDelete})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","fetchAlumni","createAlumni","updateAlumni","deleteAlumni","AlumniForm","AlumniList","jsx","_jsx","jsxs","_jsxs","AdminDashboard","token","localStorage","getItem","selectedAlumni","setSelectedAlumni","alumniList","setAlumniList","fetchData","data","console","log","error","handleCreateOrUpdate","alumniData","_id","response","handleEdit","alumni","handleLogout","removeItem","window","location","href","handleDelete","id","children","onClick","initialValues","onSubmit","onEdit","onDelete"],"sources":["C:/Users/USER/alumni-Tracker2/frontend/src/pages/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchAlumni, createAlumni, updateAlumni, deleteAlumni } from '../services/api';\r\nimport AlumniForm from '../components/AlumniForm';\r\nimport AlumniList from '../components/AlumniList';\r\n\r\nconst AdminDashboard = () => {\r\n    const [token] = useState(localStorage.getItem('token'));\r\n    const [selectedAlumni, setSelectedAlumni] = useState(null);\r\n    const [alumniList, setAlumniList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await fetchAlumni(token);\r\n                console.log('Fetched alumni data:', data); \r\n                setAlumniList(data || []); // Set the list directly from the response\r\n            } catch (error) {\r\n                console.error('Error fetching alumni:', error);\r\n                setAlumniList([]); // state is reset if an error occurs\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [token]);\r\n\r\n    const handleCreateOrUpdate = async (alumniData) => {\r\n        try {\r\n            if (selectedAlumni) {\r\n                await updateAlumni(token, selectedAlumni._id, alumniData);\r\n            } else {\r\n                await createAlumni(token, alumniData);\r\n            }\r\n            const response = await fetchAlumni(token);\r\n            setAlumniList(response || []); \r\n            setSelectedAlumni(null);\r\n        } catch (error) {\r\n            console.error('Error creating/updating alumni', error);\r\n        }\r\n    };\r\n    \r\n    \r\n    const handleEdit = (alumni) => {\r\n        setSelectedAlumni(alumni); \r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/admin/login';\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await deleteAlumni(token, id);\r\n            // Fetch the updated list of alumni\r\n            const data = await fetchAlumni(token);\r\n            setAlumniList(data || []); // Set the updated list directly from the response\r\n        } catch (error) {\r\n            console.error('Error deleting alumni:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Admin Dashboard</h2>\r\n            <button onClick={handleLogout}>Logout</button>\r\n            <AlumniForm\r\n                initialValues={selectedAlumni || {}}\r\n                onSubmit={handleCreateOrUpdate}\r\n            />\r\n            <h3>Alumni List</h3>\r\n            <AlumniList\r\n                alumniList={alumniList}\r\n                onEdit={handleEdit}\r\n                onDelete={handleDelete}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}